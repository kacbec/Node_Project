
/**
 * Module dependencies.
 */

var express = require('express')
  , routes = require('./routes')
  , user = require('./routes/user')
  , http = require('http')
  , path = require('path');

var app = module.exports = express();
var server = http.createServer(app);

app.set('port', process.env.PORT || 3000);
app.set('views', __dirname + '/views');
app.set('view engine', 'jade');
app.use(express.favicon());
app.use(express.logger('dev'));
app.use(express.bodyParser());
app.use(express.cookieParser());  
app.use(express.session({ secret: 'dev' }));
app.use(express.methodOverride());
app.use(app.router);
app.engine('jade', require('jade').__express);
app.use(require('stylus').middleware(__dirname + '/public'));
app.use(express.static(path.join(__dirname, 'public')));


 app.configure('development', function(){
   app.use(express.errorHandler({ dumpExceptions: true, showStack: true })); 
 });
 
 app.configure('production', function(){
   app.use(express.errorHandler()); 
 });

var mongoose = require('mongoose'),
session = require('./controllers/session_controller'),
message = require('./controllers/message_controller'),
ClientModel = require('./models/client_model').ClientModel;


// DB Connection for Client list
mongoose.connect('mongodb://localhost/demo-chat');

// Clean previous data
var clients = new ClientModel();
clients.collection.drop();



var io = require("socket.io").listen(server);
var socket, players = [] ;	


require('./routes/index')(app);

server.listen(app.get('port'), function(){
  //console.log("\n   Express server listening on port " + app.get('port'));
});

// development only
if ('development' == app.get('env')) {
  app.use(express.errorHandler());
}

app.get('/', routes.index);
app.get('/users', user.list);


